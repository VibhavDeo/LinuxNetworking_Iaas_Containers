---
- name: Delete subnet resources in a VPC
  hosts: my_hosts
  gather_facts: no
  vars_files:
    - variables/delete_subnet_variables.yml

  tasks:

    # #----------------------------------- DNAT Rule Deletion -----------------------------------------
    - name: Delete DNAT rule on other host
      become: yes
      command: "sudo iptables -t nat -D PREROUTING -p tcp -d 192.168.5.2 --dport {{ dnat_port }} -j DNAT --to-destination 1.1.1.2:{{ dnat_port }}"
      when: inventory_hostname == '192.168.38.11'

    #----------------------------------- Bridge and Namespace Connection Cleanup --------------------
    - name: Remove forward traffic rule for reverse interface pairs
      become: yes
      ansible.builtin.command: "ip netns exec {{ vpc_id }} iptables -D FORWARD -i {{ veth_brv_v_inf }} -o {{ veth_vpns_v_inf }} -j ACCEPT"

    - name: Remove forward traffic rule for interface pairs
      become: yes
      ansible.builtin.command: "ip netns exec {{ vpc_id }} iptables -D FORWARD -i {{ veth_vpns_v_inf }} -o {{ veth_brv_v_inf }} -j ACCEPT"

    - name: Remove SNAT rule
      ansible.builtin.command: "sudo ip netns exec {{ vpc_id }} iptables -t nat -D POSTROUTING -s {{ subnet_ip }} -o {{ veth_vpns_v_inf }} ! -d {{ subnet_ip }} -j MASQUERADE"

    - name: Delete IP address from veth vpc endpoint interface
      ansible.builtin.command: "sudo ip netns exec {{ vpc_id }} ip addr del {{ veth_brv_v_inf_ip }} dev {{ veth_brv_v_inf }}"

    - name: Ensure bridge interface is down
      ansible.builtin.command: "sudo ip link set {{ veth_brv_br_inf }} down"

    - name: Detach bridge endpoint from the bridge
      ansible.builtin.command: "sudo ip link set {{ veth_brv_br_inf }} nomaster"

    - name: Delete the ns interface endpoint
      ansible.builtin.command: "sudo ip netns exec {{ vpc_id }} ip link delete {{ veth_brv_v_inf }}"

    #----------------------------------- Network Cleanup ---------------------------------------------
    # - name: Stop the network
    #   community.libvirt.virt_net:
    #     command: stop
    #     name: "{{ network_id }}"
    #   become: yes

    # - name: Undefine network
    #   community.libvirt.virt_net:
    #     command: undefine
    #     name: "{{ network_id }}"
    #   become: yes

    # - name: Delete network XML files
    #   ansible.builtin.file:
    #     path: "{{ script_files_dir }}/{{ network_id }}"
    #     state: absent

    #----------------------------------- Bridge Cleanup ----------------------------------------------
    - name: Ensure Bridge is down
      become: yes
      ansible.builtin.command: "sudo ip link set dev {{ br_id }} down"

    - name: Delete Linux Bridge
      become: yes
      ansible.builtin.command: "sudo brctl delbr {{ br_id }}"
